{"version":3,"sources":["view/TourPackage.module.css","images/Default_Jumbotron.jpg","styles.module.css","images/Taiwan_Jumbotron.jpg","images/Taiwan_1.png","images/Taiwan_2.png","images/Taiwan_3.png","images/Taiwan_4.png","images/Thai_Jumbotron.jpg","images/Thai_1.png","images/Thai_2.png","images/Thai_3.png","images/home.jpg","images/free_n_easy.jpg","images/membership.jpg","images/contact_us.jpg","model/Database.js","view/TourSearch.js","view/TourPackage.js","view/Home.js","hooks/useLocalStorage.js","contexts/cart.js","view/Product.js","contexts/products.js","contexts/common.js","view/Catalogue.js","view/FreeAndEasy.js","view/Membership.js","view/ModalPanel.js","view/ContactUsForm.js","view/ContactUs.js","contexts/checkout.js","contexts/auth.js","layouts/RouteWrapper.js","App.js","pages/auth.js","pages/checkout.js","constants/common.js","index.js","view/underConstruction.module.css","view/ContactUs.module.css"],"names":["module","exports","countries","newJumbotronImg","backgroundImage","require","newHeaderStyle","color","textAlign","opacity","newHeaderText","img","adText","tips","destinationName","info","tmp","Object","values","map","item","fetchAllCountries","getRemainingMonths","Component","_monthId","Date","getMonth","slice","get2Years","_thisYear","getFullYear","TourSearch","props","generateErrorCode","idx","_x","state","errCode","setState","getErrorMsg","id","errIndex","tourSelection","errMsg","label","destination","options","onSelect","optionSelected","console","log","searchOK","package","month","year","handleClick","indexOf","to","Row","Col","lg","span","offset","style","fontSize","margin","DropdownButton","as","ButtonGroup","key","variant","toLowerCase","title","marginLeft","value","option","index","Dropdown","Item","eventKey","type","float","borderRadius","marginTop","onClick","event","home_img","homeImg","useLocalStorage","initialValue","React","useState","window","localStorage","getItem","JSON","parse","error","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","initialState","isCartOpen","items","CartStateContext","createContext","CartDispatchContext","reducer","action","payload","cartItem","cartItems","includes","quantity","filter","cartItemId","Error","addToCart","dispatch","CartProvider","children","persistedCartItems","setPersistedCartItems","persistedCartState","useReducer","useEffect","Provider","ProductCard","data","isAdded","setIsAdded","useContext","image","name","price","stock","className","src","alt","product","setTimeout","products","isLoading","isLoaded","ProductsStateContext","ProductsDispatchContext","getProducts","axios","get","then","response","catch","ProductsProvider","isSearchBarOpen","searchKeyword","CommonStateContext","CommonDispatchContext","CommonProvider","Catalogue","productsList","Product","free_n_easy_img","free_n_easyImg","membership_img","membershipImg","ModalPanel","show","showPanel","newProps","this","document","body","overflow","Alert","backgroundColor","zIndex","position","onClose","dismissible","Heading","msg","ContactUsForm","validateEmail","elementValue","_errMsg","test","validateUserName","userName","trim","validateMsg","upadteUserName","target","setDisplayError","updateEmail","email","updateMsg","verifyEntry","handleSubmit","errMsgArr","push","filtered","el","preventDefault","length","setErrMsg","setSubmit","onSubmit","class","onChange","placeholder","height","contactUs_img","contactUsImg","_headerStyle","styles","headerText","CHECKOUT_STEPS","step","shippingAddress","CheckoutStateContext","CheckoutDispatchContext","CheckoutProvider","checkoutState","setCheckoutState","persistedCheckoutState","RouteWrapper","BackgroundStyle","Yup","shape","password","required","username","fullName","phoneNumber","matches","min","max","addressLine","city","code","country","backgroundSize","backgroundRepeat","backgroundPosition","App","setJumbotronStyle","newStyle","setJumbotronImg","setHeaderStyle","setHeaderText","backgroundStyle","jumbotronImg","headerStyle","exact","path","render","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.f8790eb8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"TourPackage_img__4ZkOy\",\"adText\":\"TourPackage_adText__2OAQl\"};","module.exports = __webpack_public_path__ + \"static/media/Default_Jumbotron.e2e740f5.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"styles_body__3G-Wf\",\"textStyle\":\"styles_textStyle__3JMLT\",\"td\":\"styles_td__yikQd\"};","module.exports = __webpack_public_path__ + \"static/media/Taiwan_Jumbotron.a78f271f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Taiwan_1.77b5d8c3.png\";","module.exports = __webpack_public_path__ + \"static/media/Taiwan_2.51bcd342.png\";","module.exports = __webpack_public_path__ + \"static/media/Taiwan_3.e989cd15.png\";","module.exports = __webpack_public_path__ + \"static/media/Taiwan_4.b75a1fb5.png\";","module.exports = __webpack_public_path__ + \"static/media/Thai_Jumbotron.4aebc0d9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Thai_1.a9d2285c.png\";","module.exports = __webpack_public_path__ + \"static/media/Thai_2.c8eca3c8.png\";","module.exports = __webpack_public_path__ + \"static/media/Thai_3.f602a7ae.png\";","module.exports = __webpack_public_path__ + \"static/media/home.62a22de9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/free_n_easy.5dc917f6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/membership.f88f52f7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/contact_us.01dfa1d2.jpg\";","var countries = {\r\n    \"Taiwan\": {\r\n        \"Jumbotron\":\r\n        {\r\n            newJumbotronImg: { backgroundImage: `url(${require('./../images/Taiwan_Jumbotron.jpg')})` },\r\n            newHeaderStyle: { color: 'purple', textAlign: \"center\", opacity: \"0.7\" },\r\n            newHeaderText: \"Taiwan Waiting For You !!!\"\r\n        }\r\n        ,\r\n        \"TourPackage\": [\r\n            {\r\n                img: { backgroundImage: `url(${require('./../images/Taiwan_1.png')})` },\r\n                adText: \"8D7N FABULOUS LOVE IN TAIWAN\",\r\n                tips: \"From $748 Click to Enter!!\"\r\n            },\r\n            {\r\n                img: { backgroundImage: `url(${require('./../images/Taiwan_2.png')})` },\r\n                adText: \"6D5N WALTZING THROUGH TAIWAN\",\r\n                tips: \"From $928\"\r\n            },\r\n            {\r\n                img: { backgroundImage: `url(${require('./../images/Taiwan_3.png')})` },\r\n                adText: \"6D5N CAPTIVATING TAIWAN\",\r\n                tips: \"From $768\"\r\n            },\r\n            {\r\n                img: { backgroundImage: `url(${require('./../images/Taiwan_4.png')})` },\r\n                adText: \"8D7N ENCHANTING TAIWAN\",\r\n                tips: \"From $938\"\r\n            },]\r\n    },\r\n    \"Thailand\": {\r\n        \"Jumbotron\":\r\n        {\r\n            newJumbotronImg: { backgroundImage: `url(${require('./../images/Thai_Jumbotron.jpg')})` },\r\n            newHeaderStyle: { color: 'lightblue', textAlign: \"center\" },\r\n            newHeaderText: \"Welcome to Thailand !!!\"\r\n        }\r\n        ,\r\n        \"TourPackage\": [\r\n            {\r\n                img: { backgroundImage: `url(${require('./../images/Thai_1.png')})` },\r\n                adText: \"5D4N CHIANG MAI CHIANG RAI + 2N BANGKOK FREE & EASY\",\r\n                tips: \"From $500 Click to Enter!!\"\r\n\r\n            },\r\n            {\r\n                img: { backgroundImage: `url(${require('./../images/Thai_2.png')})` },\r\n                adText: \"5D4N BANGKOK UDON THANI RED LOTUS - LAOS\",\r\n                tips: \"From $400\"\r\n            },\r\n            {\r\n                img: { backgroundImage: `url(${require('./../images/Thai_3.png')})` },\r\n                adText: \"5D4N BANGKOK KHAO KHO - SEA OF CLOUDS\",\r\n                tips: \"From $400\"\r\n            },]\r\n    }\r\n}\r\n\r\nvar fetchAllCountries = (info) => {\r\n    var tmp = []\r\n    Object.values(countries).map((item) => {\r\n        tmp = [...tmp, ...item[info]]\r\n    })\r\n    return tmp\r\n}\r\n\r\n// module.exports = \r\nexport default {\r\n    fetchJumbotronImg : (destinationName ) => {\r\n        return countries[destinationName][\"Jumbotron\"]\r\n     },\r\n    \r\n    fetchTourPacakges : (destinationName) => {\r\n        if( destinationName === 'All')\r\n            return fetchAllCountries(\"TourPackage\")\r\n        return countries[destinationName][\"TourPackage\"]\r\n    },\r\n\r\n    countryExist : (destinationName) =>{\r\n        return countries[destinationName]\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport './../index.css';\r\n\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Dropdown from 'react-bootstrap/Dropdown'\r\nimport DropdownButton from 'react-bootstrap/DropdownButton'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { TourPackage } from './TourPackage'\r\nimport { Switch, Route } from 'react-router-dom';\r\n\r\nconst getRemainingMonths = () => {\r\n    var _monthId = new Date().getMonth() // 0 = Jan ... 11 = Dec\r\n\r\n    var _months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'July', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']\r\n\r\n    return _months.slice(_monthId)\r\n}\r\n\r\nconst get2Years = () => {\r\n    var _thisYear = new Date().getFullYear()\r\n    return [_thisYear, _thisYear + 1]\r\n}\r\n\r\n\r\n\r\nexport class TourSearch extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            destination: \"Any Destination\",\r\n            package: \"Tour Type\",\r\n            month: \"Month\",\r\n            year: \"Year\",\r\n            errIndex: -1,\r\n            errCode: '1111'\r\n        }\r\n    }\r\n\r\n    generateErrorCode = (idx) => {\r\n        var _x = this.state.errCode\r\n        _x = _x.slice(0, idx) + '0' + _x.slice(++idx)\r\n        this.setState({ errCode: _x })\r\n\r\n    }\r\n\r\n    getErrorMsg = () => {\r\n        var id = this.state.errIndex\r\n        return this.tourSelection()[id].errMsg\r\n    }\r\n\r\n    tourSelection = () => [\r\n        {\r\n            label: this.state.destination,\r\n            options: ['Australia', 'China', 'Europe', 'Indonesia', 'Japan' , 'South Korea', 'Taiwan', 'Thailand'],\r\n            onSelect: (optionSelected) => {\r\n                console.log(optionSelected)\r\n                this.setState({ destination: optionSelected })\r\n\r\n                this.generateErrorCode(0)\r\n            },\r\n            errMsg: \"Please Select Destination\",\r\n            searchOK: false,\r\n        },\r\n        {\r\n            label: this.state.package,\r\n            options: [\"Package\", \"Free & Easy\"],\r\n            onSelect: (optionSelected) => {\r\n                console.log(optionSelected)\r\n                this.setState({ package: optionSelected })\r\n                this.generateErrorCode(1)\r\n            },\r\n            errMsg: \"Please Select Type\"\r\n        },\r\n        {\r\n            label: this.state.month,\r\n            options: getRemainingMonths(),\r\n            onSelect: (optionSelected) => {\r\n                console.log(optionSelected)\r\n                this.setState({ month: optionSelected })\r\n                this.generateErrorCode(2)\r\n            },\r\n            errMsg: \"Please Select Month\"\r\n        },\r\n        {\r\n            label: this.state.year,\r\n            options: get2Years(),\r\n            onSelect: (optionSelected) => {\r\n                console.log(optionSelected)\r\n                this.setState({ year: optionSelected })\r\n                this.generateErrorCode(3)\r\n            },\r\n            errMsg: \"Please Select Year\"\r\n        }\r\n    ]\r\n\r\n    handleClick = () => {\r\n        console.log('---------handleClick---------')\r\n        console.log(this.state.destination + ' ' + this.state.package + ' ' + ' ' + this.state.month + ' ' + this.state.year)\r\n        if (this.state.errCode !== '0000') {\r\n            //         console.log('Generate Error message')\r\n            var id = this.state.errCode.indexOf('1')\r\n            this.setState({ errIndex: id })\r\n            //          console.log('errIndex == ', id)\r\n            //          console.log(this.tourSelection()[id].errMsg)\r\n        } else {\r\n            this.setState({ searchOK: true })\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const tourSelectionDropdown = () => {\r\n            return (\r\n                this.state.searchOK === true ?\r\n                    <Redirect to={`/tourPackage/${this.state.destination}`}/>\r\n                    :\r\n                    <div>\r\n                        {(this.state.errIndex !== -1 ?\r\n                            <Row>\r\n                                <Col lg={{ span: 5, offset: 3 }} >\r\n                                    <label style={{ color: \"red\", fontSize: \"20px\" }}>\r\n                                        Error Message :  {this.getErrorMsg()}\r\n                                    </label>\r\n                                </Col>\r\n                            </Row> : <div></div>)}\r\n                        <Row>\r\n                            <Col lg={{ span: 5, offset: 3 }} >\r\n\r\n                                <div style={{ margin: \"auto\" }}>\r\n                                    {this.tourSelection().map((item) => (\r\n                                        <>\r\n                                            <DropdownButton\r\n                                                as={ButtonGroup}\r\n                                                key={item.label}\r\n                                                variant={'info'.toLowerCase()}\r\n                                                title={item.label}\r\n                                                style={{ marginLeft: 5 }}\r\n                                                id={`dropdown-variants-${item.label}`}\r\n                                                onSelect={(value) => item.onSelect(value)}\r\n                                            >\r\n                                                {item.options.map((option, index) => (\r\n                                                    <>\r\n                                                        <Dropdown.Item eventKey={option}>{option}\r\n                                                        </Dropdown.Item>\r\n                                                    </>\r\n                                                ))}\r\n                                            </DropdownButton>{' '}\r\n                                        </>\r\n                                    ),\r\n                                    )}\r\n                                </div>\r\n                            </Col>\r\n\r\n                            <input type=\"submit\" value=\"Search\" style={{ float: \"left\", borderRadius: \"8px\", marginTop: \"-8px\", fontSize: \"20px\" }} onClick={(event) => { this.handleClick(event) }} />\r\n\r\n                        </Row>\r\n                    </div>\r\n            );\r\n        }\r\n\r\n\r\n        return (\r\n            tourSelectionDropdown()\r\n        );\r\n    }\r\n}\r\n","import './../index.css';\r\nimport React, { Component } from 'react';\r\nimport { OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport DB from '../model/Database'\r\n\r\n\r\nimport styles from './TourPackage.module.css';\r\n\r\n\r\nconst tooltip = (tips) => {\r\n    return (\r\n        <Tooltip id=\"tooltip\">\r\n            <strong>{tips}</strong>\r\n        </Tooltip>\r\n    )\r\n}\r\n\r\nconst TOTAL_COL = 3\r\n\r\nconst tourPackageBackgroundImg = { backgroundImage: `url(${require('./../images/Default_Jumbotron.jpg')})` }\r\n\r\n\r\nexport class TourPackage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            mounted: false,\r\n            errMsg: \"\",\r\n            validDestination: false\r\n        }\r\n    }\r\n\r\n\r\n    getErrorMsg = () => {\r\n        return this.state.errMsg\r\n    }\r\n\r\n    tourPackagesSelections = (destination) => {\r\n        console.log('destination == ', destination)\r\n        return DB.fetchTourPacakges(destination)\r\n\r\n    }\r\n\r\n    isDestinationValid = (destination) => {\r\n        if (destination !== 'All') {\r\n            if (DB.countryExist(destination) === undefined) {\r\n                var _errMsg = \"Sorry, no tour package to \" + destination + ' at the moment !! '\r\n                if (this.state.errMsg === \"\") {\r\n                    this.setState({ errMsg: _errMsg, validDestination: false })\r\n                }\r\n                return false\r\n            }\r\n        }\r\n\r\n        if (this.state.errMsg !== \"\")\r\n            this.setState({ errMsg: \"\" })\r\n\r\n        this.setState({ validDestination: true })\r\n        return true\r\n    }\r\n\r\n\r\n    uploadJumbotron = (destination) => {\r\n\r\n        if (this.isDestinationValid(destination) === false)\r\n            return\r\n\r\n        var myJumbotronStyle\r\n        (destination == 'All') ?\r\n            (\r\n                myJumbotronStyle = {\r\n                    newJumbotronImg: { backgroundImage: `url(${require('./../images/Default_Jumbotron.jpg')})` },\r\n                    newHeaderStyle: { color: '#0EEFEA', textAlign: \"center\" },\r\n                    newHeaderText: \"All Tour Packages !!!\"\r\n                }\r\n            ) :\r\n            myJumbotronStyle = DB.fetchJumbotronImg(destination)\r\n        this.props.loadJumbotronStyle(myJumbotronStyle)\r\n    }\r\n\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        console.log('*************componentDidUpdate**************')\r\n\r\n        var toUpdate = true\r\n        var prevDestination = prevProps.match.params.destination\r\n        var currentDestionation = this.props.match.params.destination\r\n\r\n\r\n        if (prevProps == undefined)\r\n            return false\r\n\r\n        if (this.state.mounted === true) {\r\n            this.setState({ mounted: false })\r\n            toUpdate = false\r\n        }\r\n\r\n        if (prevDestination === currentDestionation)\r\n            toUpdate = false\r\n\r\n        if (toUpdate === false)\r\n            return false\r\n\r\n\r\n        this.uploadJumbotron(currentDestionation)\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        console.log(\"---------------componentDidMount----------------\")\r\n        if (this.props.loadJumbotronStyle === \"\")\r\n            return\r\n        this.uploadJumbotron(this.props.match.params.destination)\r\n        this.setState({ mounted: true })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log('*********************************Component WILL UNMOUNT!')\r\n    }\r\n\r\n\r\n    handleClick = (event, tourPackage) => {\r\n        console.log('Image Click !! ')\r\n    }\r\n\r\n    tourPackageHTML = (tourPackages) => {\r\n        return (\r\n            <div>\r\n                <OverlayTrigger placement=\"top\" overlay={tooltip(tourPackages.tips)} >\r\n                    <div className={styles.img} style={tourPackages.img} onClick={(event) => { this.handleClick(event, tourPackages) }} >\r\n\r\n                    </div>\r\n                </OverlayTrigger>\r\n                <div className={styles.adText}>\r\n                    <p>{tourPackages.adText}</p>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    tourPackageHTML_ROW = (selectedTourPackages) => {\r\n        return (\r\n            <div style={{ margin: \"auto\" }}>\r\n                <Row>\r\n                    {selectedTourPackages.map((item) => (\r\n                        <Col md={4}>\r\n                            {this.tourPackageHTML(item)}\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        let renderPage\r\n        if (this.state.validDestination === true) {\r\n            var destination = this.props.match.params.destination\r\n            var selectedTourPackages = this.tourPackagesSelections(destination)\r\n            renderPage =\r\n\r\n                // dynamic rows ... \r\n                [...Array(selectedTourPackages.length)].map((u, i) =>\r\n                    <>\r\n                        {(i % TOTAL_COL == 0) ?\r\n                            this.tourPackageHTML_ROW(selectedTourPackages.slice(i, i + TOTAL_COL)) : null\r\n                        }\r\n                    </>)\r\n        }\r\n        else\r\n            renderPage =\r\n                <label style={{ color: \"red\", fontSize: \"20px\" }}>\r\n                    Error Message :  {this.getErrorMsg()}\r\n                </label>\r\n\r\n        return (\r\n            <div className=\"body\">\r\n                {renderPage}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport Button from 'react-bootstrap/Button'\r\nimport './../index.css';\r\n\r\nimport { TourSearch } from './TourSearch'\r\n\r\nconst home_img = require('./../images/home.jpg');\r\n\r\nconst homeImg = { backgroundImage: `url(${home_img})` }\r\n\r\nexport class Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        const myJumbotronStyle = {\r\n            newJumbotronImg: homeImg,\r\n            newHeaderStyle: { color: \"red\", textAlign: \"center\" ,opacity:\"0.5\"},\r\n            newHeaderText: \"Welcome Home\"\r\n        }\r\n\r\n        this.props.loadJumbotronStyle(myJumbotronStyle)\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const HomeHTML = (\r\n            <div className=\"body\" style={{ marginTop: \"80px\" }}>\r\n                <TourSearch />\r\n            </div>\r\n        );\r\n        return (\r\n            HomeHTML\r\n        );\r\n    }\r\n}\r\n\r\n","import React from \"react\";\n\nfunction useLocalStorage(key, initialValue) {\n  const [storedValue, setStoredValue] = React.useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.error(error);\n      return initialValue;\n    }\n  });\n\n  const setValue = (value) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\nexport default useLocalStorage;\n","import React, { useReducer, createContext, useEffect } from \"react\";\nimport useLocalStorage from '../hooks/useLocalStorage';\n\nconst initialState = {\n  isCartOpen: false,\n  items: []\n};\n\nexport const CartStateContext = createContext();\nexport const CartDispatchContext = createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"TOGGLE_CART_POPUP\":\n      return {\n        ...state,\n        isCartOpen: !state.isCartOpen\n      };\n    case \"ADD_TO_CART\":\n      const id = action.payload.cartItem.id;\n      const isOld = state.items.map((item) => item.id).includes(id);\n      let cartItems = null;\n      if (isOld) {\n        const items = state.items.map((item) => {\n          if (item.id === id) {\n            return {\n              ...item,\n              quantity: item.quantity + 1\n            };\n          }\n          return item;\n        });\n        cartItems = [...items];\n      } else {\n        cartItems = [...state.items, action.payload.cartItem];\n      }\n      return {\n        ...state,\n        items: cartItems\n      };\n    case \"REMOVE_FROM_CART\":\n      return {\n        ...state,\n        items: state.items.filter(\n          (item) => item.id !== action.payload.cartItemId\n        )\n      };\n    case \"CLEAR_CART\":\n      return {\n        ...state,\n        ...initialState\n      };\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n};\n\nexport const toggleCartPopup = (dispatch) => {\n  return dispatch({\n    type: \"TOGGLE_CART_POPUP\"\n  });\n};\n\nexport const addToCart = (dispatch, cartItem) => {\n  return dispatch({\n    type: \"ADD_TO_CART\",\n    payload: {\n      cartItem: cartItem\n    }\n  });\n};\n\nexport const removeFromCart = (dispatch, cartItemId) => {\n  return dispatch({\n    type: \"REMOVE_FROM_CART\",\n    payload: {\n      cartItemId: cartItemId\n    }\n  });\n};\n\nexport const clearCart = (dispatch) => {\n  return dispatch({\n    type: \"CLEAR_CART\"\n  });\n};\n\nconst CartProvider = ({ children }) => {\n  const [persistedCartItems, setPersistedCartItems] = useLocalStorage(\n    \"cartItems\",\n    []\n  );\n  const persistedCartState = {\n    isCartOpen: false,\n    items: persistedCartItems || []\n  };\n  const [state, dispatch] = useReducer(reducer, persistedCartState);\n  useEffect(() => {\n    setPersistedCartItems(state.items);\n  }, [JSON.stringify(state.items)]);\n  return (\n    <CartDispatchContext.Provider value={dispatch}>\n      <CartStateContext.Provider value={state}>\n        {children}\n      </CartStateContext.Provider>\n    </CartDispatchContext.Provider>\n  );\n};\n\nexport default CartProvider;\n","import React, { useState, useContext } from \"react\";\nimport { CartDispatchContext, addToCart } from \"../contexts/cart\";\n\nconst ProductCard = ({ data }) => {\n  const [isAdded, setIsAdded] = useState(false);\n  const dispatch = useContext(CartDispatchContext);\n  const { image, name, price, id, stock } = data;\n\n  const handleAddToCart = () => {\n    const product = { ...data, quantity: 1 };\n    addToCart(dispatch, product);\n    setIsAdded(true);\n    setTimeout(() => {\n      setIsAdded(false);\n    }, 3500);\n  };\n\n  return (\n    <div className=\"product\">\n      <div className=\"product-image\">\n        <img src={image} alt={name} />\n      </div>\n      <h4 className=\"product-name\">{name}</h4>\n      <p className=\"product-price\">{price}</p>\n      <div className=\"product-action\">\n        <button\n          className={!isAdded ? \"\" : \"added\"}\n          type=\"button\"\n          onClick={handleAddToCart}\n        >\n          {!isAdded ? \"ADD TO CART\" : \"✔ ADDED\"}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductCard;\n","import React, { useReducer, createContext } from \"react\";\nimport axios from \"axios\";\n\nconst initialState = {\n  products: null,\n  isLoading: false,\n  isLoaded: false\n};\n\nexport const ProductsStateContext = createContext();\nexport const ProductsDispatchContext = createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"GET_PRODUCTS_REQUEST\":\n      return {\n        ...state,\n        isLoading: true,\n        isLoaded: false\n      };\n    case \"GET_PRODUCTS_SUCCESS\":\n      return {\n        ...state,\n        isLoading: false,\n        isLoaded: true,\n        products: action.payload.products\n      };\n    case \"GET_PRODUCTS_FAILURE\":\n      return {\n        ...state,\n        products: null,\n        isLoading: false,\n        isLoaded: false\n      };\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n};\n\nconst ProductsProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <ProductsDispatchContext.Provider value={dispatch}>\n      <ProductsStateContext.Provider value={state}>\n        {children}\n      </ProductsStateContext.Provider>\n    </ProductsDispatchContext.Provider>\n  );\n};\n\nexport const getProducts = (dispatch) => {\n  dispatch({\n    type: \"GET_PRODUCTS_REQUEST\"\n  });\n  const url =\n    \"https://res.cloudinary.com/sivadass/raw/upload/v1535817394/json/products.json\";\n  axios\n    .get(url)\n    .then((response) => {\n      dispatch({\n        type: \"GET_PRODUCTS_SUCCESS\",\n        payload: {\n          products: response.data\n        }\n      });\n    })\n    .catch((error) => {\n      console.error(error);\n      dispatch({\n        type: \"GET_PRODUCTS_FAILURE\"\n      });\n    });\n};\n\nexport default ProductsProvider;\n","import React, { useReducer, createContext } from \"react\";\n\nconst initialState = {\n  isSearchBarOpen: false,\n  searchKeyword: \"\"\n};\n\nexport const CommonStateContext = createContext();\nexport const CommonDispatchContext = createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"TOGGLE_SEARCH_BAR\":\n      return {\n        ...state,\n        isSearchBarOpen: !state.isSearchBarOpen\n      };\n    case \"SET_SEARCH_KEYWORD\":\n      return {\n        ...state,\n        searchKeyword: action.payload.searchKeyword\n      };\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n};\n\nconst CommonProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <CommonDispatchContext.Provider value={dispatch}>\n      <CommonStateContext.Provider value={state}>\n        {children}\n      </CommonStateContext.Provider>\n    </CommonDispatchContext.Provider>\n  );\n};\n\nexport const toggleSearchBar = (dispatch) => {\n  return dispatch({\n    type: \"TOGGLE_SEARCH_BAR\"\n  });\n};\n\nexport const setSearchKeyword = (dispatch, searchKeyword) => {\n  return dispatch({\n    type: \"SET_SEARCH_KEYWORD\",\n    payload: {\n      searchKeyword: searchKeyword\n    }\n  });\n};\n\nexport default CommonProvider;\n","import React, { useEffect, useContext } from \"react\";\r\nimport ProductCard from \"./Product\";\r\nimport {\r\n  ProductsStateContext,\r\n  ProductsDispatchContext,\r\n  getProducts\r\n} from \"../contexts/products\";\r\n\r\nimport { CommonStateContext } from \"../contexts/common\";\r\n\r\nconst Catalogue = () => {\r\n  const { products, isLoading, isLoaded } = useContext(ProductsStateContext);\r\n  const { searchKeyword } = useContext(CommonStateContext);\r\n  const dispatch = useContext(ProductsDispatchContext);\r\n\r\n  const productsList =\r\n    products &&\r\n    products.filter((product) => {\r\n      return (\r\n        product.name.toLowerCase().includes(searchKeyword.toLowerCase()) ||\r\n        !searchKeyword\r\n      );\r\n    });\r\n\r\n  useEffect(() => {\r\n    getProducts(dispatch);\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"products-wrapper\">\r\n        <h1>Loading...</h1>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <div className=\"products-wrapper\">\r\n      <div className=\"products\">\r\n        {isLoaded &&\r\n          productsList.map((data) => {\r\n            return <ProductCard key={data.id} data={data} />;\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Catalogue;\r\n","import React, { Component } from 'react';\r\n\r\n\r\nimport style from './../styles.module.css'\r\nimport styles from './underConstruction.module.css';\r\n\r\n\r\nconst free_n_easy_img = require('./../images/free_n_easy.jpg');\r\n\r\nconst free_n_easyImg = { backgroundImage: `url(${free_n_easy_img})` };\r\n\r\nexport class FreeAndEasy extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const myJumbotronStyle = {\r\n            newJumbotronImg: free_n_easyImg,\r\n            newHeaderStyle: {color: 'darkblue', textAlign: \"center\" } ,\r\n            newHeaderText: \"Free And Easy\"\r\n        }\r\n\r\n        this.props.loadJumbotronStyle(myJumbotronStyle)\r\n    }\r\n\r\n    render() {\r\n        const _freeAndEasy = (\r\n            <div className={styles.img}>\r\n                              \r\n            </div >\r\n            );\r\n        return (\r\n            _freeAndEasy\r\n        );\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\n\r\nimport style from './../styles.module.css'\r\nimport styles from './underConstruction.module.css';\r\n\r\n\r\nconst membership_img = require('./../images/membership.jpg');\r\n\r\nconst membershipImg = { backgroundImage: `url(${membership_img})` }\r\n\r\n\r\nexport class Membership extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const myJumbotronStyle = {\r\n            newJumbotronImg: membershipImg,\r\n            newHeaderStyle: { color: 'darkblue', textAlign: \"center\" },\r\n            newHeaderText: \"Join our Memebership Rewards Scheme\"\r\n        }\r\n\r\n        this.props.loadJumbotronStyle(myJumbotronStyle)\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const _memebership = (\r\n            <div className={styles.img}>\r\n                              \r\n            </div >\r\n       );\r\n        return (\r\n            _memebership\r\n        );\r\n    }\r\n}\r\n\r\n","import React, {  Component  } from 'react';\r\n\r\nimport Alert from 'react-bootstrap/Alert'\r\n\r\nexport class ModalPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            show: props.showPanel,\r\n        }\r\n    }\r\n\r\n    \r\n    componentWillReceiveProps(newProps) {\r\n        console.log('Component WILL RECIEVE PROPS!')\r\n        console.log('props.displayError == ', this.props.showPanel)\r\n        console.log('show == ', this.state.show)\r\n        console.log(newProps.showPanel)\r\n        this.setState({ show: newProps.showPanel })\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('props.displayError == ', this.props.showPanel)\r\n        console.log('show == ', this.state.show)\r\n        if(this.state.show){\r\n            document.body.style.overflow = 'hidden';\r\n          }    \r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        document.body.style.overflow = 'unset';\r\n    }\r\n    \r\n    render() {\r\n\r\n        const modalPanel = (\r\n            this.state.show &&\r\n            <Alert style={{ backgroundColor: this.props.backgroundColor,  zIndex: 10, position: \"absolute\" }} variant=\"danger\" onClose={() => this.setState({ show: false })} dismissible >\r\n                <Alert.Heading>{this.props.title}</Alert.Heading>\r\n                <p>\r\n                    {this.props.msg}\r\n                </p>\r\n            </Alert >)\r\n        return (\r\n            modalPanel\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './../App.css'\r\nimport './../index.css';\r\n\r\nexport class ContactUsForm extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            userName: '',\r\n            email: '',\r\n            msg: '',\r\n        };\r\n    };\r\n\r\n\r\n    validateEmail = (elementValue) => {\r\n        var _errMsg = \"\"\r\n        var emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\r\n        if (emailPattern.test(elementValue) === false) {\r\n            _errMsg = \"Invalid email address.\"\r\n        }\r\n        console.log('validateEmail : ', _errMsg)\r\n        return _errMsg;\r\n    }\r\n\r\n    validateUserName = (userName) => {\r\n        var _errMsg = \"\"\r\n        if (userName.trim() === '') {\r\n            console.log(\"Username is required\")\r\n            _errMsg = \"Username is required.\"\r\n        }\r\n        return _errMsg\r\n    }\r\n\r\n    validateMsg = (msg) => {\r\n        var _errMsg = \"\"\r\n        if (msg.trim() === '') {\r\n            _errMsg = \"Please enter your enquiry.\"\r\n        }\r\n        return _errMsg\r\n    }\r\n\r\n    upadteUserName = (event) => {\r\n        this.setState({\r\n            userName: event.target.value,\r\n        })\r\n        this.props.setDisplayError(false)\r\n\r\n    }\r\n\r\n    updateEmail = (event) => {\r\n        this.setState({\r\n            email: event.target.value,\r\n        });\r\n        this.props.setDisplayError(false)\r\n    }\r\n\r\n    updateMsg = (event) => {\r\n        this.setState({\r\n            msg: event.target.value,\r\n        });\r\n        this.props.setDisplayError(false)\r\n    }\r\n\r\n\r\n    verifyEntry = (event) => {\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        var errMsgArr = []\r\n        errMsgArr.push(this.validateUserName(this.state.userName))\r\n        errMsgArr.push(this.validateEmail(this.state.email))\r\n        errMsgArr.push(this.validateMsg(this.state.msg))\r\n\r\n        var filtered = errMsgArr.filter(function (el) {\r\n            return el !== \"\";\r\n        });\r\n\r\n        event.preventDefault();\r\n\r\n        if (filtered.length === 0) {\r\n            this.props.setDisplayError(false)\r\n            this.props.setErrMsg('')\r\n            this.props.setSubmit(true)\r\n        } else {\r\n            this.props.setDisplayError(true)\r\n            this.props.setErrMsg(filtered[0])\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const _formContactUs = (\r\n            <form onSubmit={this.handleSubmit}>\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-3\" >\r\n                        <label>* Your Name :</label>\r\n                    </div>\r\n                    <div class=\"col-lg-9\" >\r\n                        <input type=\"Text\" id=\"EnqName\" name=\"EnqName\" style={{  }} value={this.state.userName} onChange={this.upadteUserName} placeholder=\"Your Name\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-3\" >\r\n                        <label>* Email Address :</label>\r\n                    </div>\r\n                    <div class=\"col-lg-9\" >\r\n                        <input type=\"Text\" id=\"EnqEmail\" name=\"EnqEmail\" style={{  }} value={this.state.email} onChange={this.updateEmail} placeholder=\"me@company.com\" />\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-3\" >\r\n                        <label>* Enquiry :</label>\r\n                    </div>\r\n                    <div class=\"col-lg-9\" >\r\n                        <textarea placeholder=\"Enter enquiry here ...\" onChange={this.updateMsg} value={this.state.msg} style={{ height: \"150px\" }} ></textarea>\r\n                    </div>\r\n                </div>\r\n                <br></br>\r\n                <input type=\"submit\" value=\"Submit\" style={{ float: \"right\", borderRadius: \"8px\" }} onClick={(event) => { this.verifyEntry(event) }} />\r\n            </form>\r\n        );\r\n        return (\r\n            _formContactUs\r\n        );\r\n    }\r\n}\r\n\r\n","\r\n\r\nimport { ModalPanel } from './ModalPanel'\r\nimport { ContactUsForm } from './ContactUsForm';\r\nimport React, { Component } from 'react';\r\n\r\nimport './../App.css'\r\nimport './../index.css';\r\nimport styles from './ContactUs.module.css';\r\n\r\n\r\nconst contactUs_img = require('./../images/contact_us.jpg');\r\n\r\nconst contactUsImg = { backgroundImage: `url(${contactUs_img})` } ;\r\n\r\n\r\nconst _headerStyle = `${styles.headerText}`\r\n\r\nexport class ContactUs extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            errMsg: '',\r\n            displayError: false,\r\n            submit: false,\r\n        };\r\n    };\r\n\r\n    componentDidMount() {\r\n        const myJumbotronStyle = {\r\n            newJumbotronImg: contactUsImg,\r\n            newHeaderStyle: {color: 'darkblue', textAlign: \"center\" } ,\r\n            newHeaderText: \"Feel Free To Contact Us\"\r\n        }\r\n\r\n        this.props.loadJumbotronStyle(myJumbotronStyle)\r\n    }\r\n\r\n    setDisplayError = (status) => {\r\n        this.setState({ displayError: status })\r\n    }\r\n\r\n    setErrMsg = (msg) => {\r\n        this.setState({ errMsg: msg })\r\n    }\r\n\r\n    setSubmit = (status) => {\r\n        this.setState({ submit: status })\r\n    }\r\n\r\n    render() {\r\n\r\n        const _contactUs = (\r\n            <div className=\"body\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-lg-3\" >\r\n                        <p class={_headerStyle}>Our Location</p>\r\n                        <label> Address : <br></br> Commonwealth Centre,<br></br> Blk 88,  #01-11.</label>\r\n                        <label>Tel : +656233267.</label>\r\n                    </div>\r\n                    <div class=\"col-lg-9\" >\r\n                        <p class={_headerStyle}>Contact Us</p>\r\n                        <ContactUsForm\r\n                            setDisplayError={this.setDisplayError}\r\n                            setErrMsg={this.setErrMsg}\r\n                            setSubmit={this.setSubmit}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                {this.state.displayError &&\r\n                    <div className={styles.submitErr}>\r\n                        <ModalPanel showPanel={this.state.displayError} msg={this.state.errMsg} title=\"Validation\" backgroundColor=\"pink\" />\r\n                    </div>\r\n                }\r\n\r\n                {this.state.submit &&\r\n                    <div className={styles.submitOK}>\r\n                        <ModalPanel showPanel={this.state.submit} msg=\"Your Enqiry has been submitted. It will take about 3 to 5 working days to get back to you.\" title=\"Enquiry Submitted Successfully\" width=\"400\" backgroundColor=\"lightblue\" />\r\n                    </div>\r\n                }\r\n\r\n            </div>\r\n\r\n        );\r\n        return (\r\n            _contactUs\r\n        );\r\n    }\r\n}\r\n\r\n","import React, { useReducer, createContext, useEffect } from \"react\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\n\nexport const CHECKOUT_STEPS = {\n  AUTH: \"auth\",\n  SHIPPING: \"shipping\",\n  PAYMENT: \"payment\"\n};\n\nconst initialState = {\n  step: CHECKOUT_STEPS.AUTH,\n  shippingAddress: null\n};\n\nexport const CheckoutStateContext = createContext();\nexport const CheckoutDispatchContext = createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"SET_CHECKOUT_STEP\":\n      return {\n        ...state,\n        step: action.payload.step\n      };\n    case \"SET_SHIPPING_ADDRESS\":\n      return {\n        ...state,\n        shippingAddress: action.payload.shippingAddress\n      };\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n};\n\nconst CheckoutProvider = ({ children }) => {\n  const [checkoutState, setCheckoutState] = useLocalStorage(\"checkout\", null);\n  const persistedCheckoutState = {\n    ...initialState,\n    shippingAddress: checkoutState || {}\n  };\n  const [state, dispatch] = useReducer(reducer, persistedCheckoutState);\n\n  useEffect(() => {\n    setCheckoutState(state.shippingAddress);\n  }, [state.shippingAddress]);\n  return (\n    <CheckoutDispatchContext.Provider value={dispatch}>\n      <CheckoutStateContext.Provider value={state}>\n        {children}\n      </CheckoutStateContext.Provider>\n    </CheckoutDispatchContext.Provider>\n  );\n};\n\nexport const setCheckoutStep = (dispatch, step) => {\n  return dispatch({\n    type: \"SET_CHECKOUT_STEP\",\n    payload: {\n      step\n    }\n  });\n};\n\nexport const saveShippingAddress = (dispatch, shippingAddress) => {\n  dispatch({\n    type: \"SET_SHIPPING_ADDRESS\",\n    payload: {\n      shippingAddress\n    }\n  });\n  return setCheckoutStep(dispatch, CHECKOUT_STEPS.PAYMENT);\n};\n\nexport default CheckoutProvider;\n","import React, { useReducer, createContext, useEffect } from \"react\";\nimport _get from \"lodash.get\";\nimport useLocalStorage from \"../hooks/useLocalStorage\";\n\nconst initialState = {\n  isLoggedIn: false,\n  user: null,\n  isLoggingIn: false\n};\n\nexport const AuthStateContext = createContext();\nexport const AuthDispatchContext = createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"LOGIN_REQUEST\":\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n        isLoggingIn: true\n      };\n    case \"LOGIN_SUCCESS\":\n      return {\n        ...state,\n        isLoggedIn: true,\n        user: action.payload.user,\n        isLoggingIn: false\n      };\n    case \"LOGIN_FAILURE\":\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n        isLoggingIn: false\n      };\n    case \"LOGOUT_SUCCESS\":\n      return {\n        ...state,\n        ...initialState\n      };\n    default:\n      throw new Error(`Unknown action: ${action.type}`);\n  }\n};\n\nexport const signIn = (dispatch, userData) => {\n  localStorage.setItem(\"user\", JSON.stringify(userData));\n  return dispatch({\n    type: \"LOGIN_SUCCESS\",\n    payload: {\n      user: userData\n    }\n  });\n};\n\nexport const signOut = (dispatch) => {\n  localStorage.clear();\n  return dispatch({\n    type: \"LOGOUT_SUCCESS\"\n  });\n};\n\nconst AuthProvider = ({ children }) => {\n  const [persistedUser, setPersistedUser] = useLocalStorage(\"user\", null);\n  const persistedUserState = {\n    ...initialState,\n    user: persistedUser,\n    isLoggedIn: _get(persistedUser, \"username\", \"\").length > 0\n  };\n  const [state, dispatch] = useReducer(reducer, persistedUserState);\n\n  useEffect(() => {\n    setPersistedUser(state.user);\n  }, [state.isLoggedIn]);\n\n  return (\n    <AuthDispatchContext.Provider value={dispatch}>\n      <AuthStateContext.Provider value={state}>\n        {children}\n      </AuthStateContext.Provider>\n    </AuthDispatchContext.Provider>\n  );\n};\n\nexport default AuthProvider;\n","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { AuthStateContext } from \"../contexts/auth\";\n\nfunction RouteWrapper({\n  component: Component,\n  layout: Layout,\n  isPrivate = false,\n  ...rest\n}) {\n  const { isLoggedIn = false } = useContext(AuthStateContext);\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (isPrivate && !isLoggedIn) {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/auth\",\n                state: { from: props.location }\n              }}\n            />\n          );\n        }\n        return (\n          <Layout {...props}>\n            <Component {...props} />\n          </Layout>\n        );\n      }}\n    />\n  );\n}\n\nexport default RouteWrapper;\n","import React, { Component } from 'react';\r\nimport { MemoryRouter } from 'react-router-dom';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport './App.css';\r\n\r\nimport {  Route } from 'react-router-dom';\r\n\r\nimport { ToolTipNavButtons } from './view/ToolTipNavButtons'\r\n\r\nimport { Home } from './view/Home'\r\n\r\nimport Catalogue from './view/Catalogue'\r\n\r\n\r\nimport { TourPackage } from './view/TourPackage'\r\n\r\nimport { FreeAndEasy } from './view/FreeAndEasy'\r\n\r\nimport { FixNavBar } from './view/FixNavBar'\r\n\r\nimport { Membership } from './view/Membership'\r\n\r\nimport { ContactUs } from './view/ContactUs'\r\n\r\nimport ProductCard from './view/Product'\r\n\r\nimport CommonProvider from './contexts/common';\r\n\r\nimport ProductsProvider from './contexts/products';\r\n\r\nimport CartProvider from './contexts/cart';\r\nimport CheckoutProvider from './contexts/checkout';\r\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\"; \r\nimport CommonLayout from \"./layouts/CommonLayout\";\r\nimport RouteWrapper from \"./layouts/RouteWrapper\";\r\nimport AuthPage from \"./pages/auth\";\r\nimport AuthLayout from \"./layouts/AuthLayout\";\r\nimport HomePage from \"./pages/home\";\r\nimport CheckoutPage from \"./pages/checkout\";\r\nimport \"./assets/scss/style.scss\";\r\n\r\nconst BackgroundStyle = {\r\n\r\n    Jumbotron: {\r\n        backgroundSize: '100% 100%',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center top',\r\n    }\r\n};\r\n\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            jumbotronImg: {},\r\n            headerStyle: { color: 'white', textAlign: \"left\" },\r\n            headerText: \"Welcome To Terry Tour Agency\"\r\n        };\r\n    }\r\n\r\n    setJumbotronStyle = (newStyle) => {\r\n        const { newJumbotronImg, newHeaderStyle, newHeaderText } = newStyle\r\n\r\n        this.setJumbotronImg(newJumbotronImg)\r\n        this.setHeaderStyle(newHeaderStyle)\r\n        this.setHeaderText(newHeaderText)\r\n    }\r\n\r\n    setJumbotronImg = (newJumbotronImg) => {\r\n\r\n        var backgroundStyle = {\r\n            ...BackgroundStyle.Jumbotron,\r\n            ...newJumbotronImg\r\n        };\r\n\r\n        this.setState({ jumbotronImg: backgroundStyle })\r\n    }\r\n\r\n    setHeaderStyle = (newHeaderStyle) => {\r\n        this.setState({ headerStyle: newHeaderStyle })\r\n    }\r\n\r\n\r\n    setHeaderText = (newHeaderText) => {\r\n        this.setState({ headerText: newHeaderText })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <CommonProvider>\r\n                <ProductsProvider>\r\n                    <CartProvider>\r\n                        <CheckoutProvider>\r\n                          {/*\r\n                            <Router>\r\n                                <Switch>\r\n                                    <RouteWrapper\r\n                                        path=\"/\"\r\n                                        exact\r\n                                        component={HomePage}\r\n                                        layout={CommonLayout}\r\n                                    />\r\n                                    <RouteWrapper\r\n                                        path=\"/checkout\"\r\n                                        component={CheckoutPage}\r\n                                        layout={CommonLayout}\r\n                                    />\r\n                                    <RouteWrapper\r\n                                        path=\"/auth\"\r\n                                        component={AuthPage}\r\n                                        layout={AuthLayout}\r\n                                    />\r\n                                </Switch>\r\n                            </Router>\r\n                          */}\r\n                            <MemoryRouter>\r\n                                    <Switch>\r\n                                        <Route exact path='/'\r\n                                            render={props =>\r\n                                                <Catalogue />} />\r\n\r\n                                    </Switch>\r\n                            </MemoryRouter>\r\n                           \r\n                        </CheckoutProvider>\r\n                    </CartProvider>\r\n                </ProductsProvider>\r\n            </CommonProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React, { useContext } from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport { AuthDispatchContext, signIn } from \"../contexts/auth\";\nimport Input from \"../components/core/form-controls/Input\";\n\nconst LoginSchema = Yup.object().shape({\n  password: Yup.string().required(\"Password is required!\"),\n  username: Yup.string().required(\"Mobile Number or Email Address is required!\")\n});\n\nconst AuthPage = () => {\n  const authDispatch = useContext(AuthDispatchContext);\n  const history = useHistory();\n  const location = useLocation();\n  const fromUrl = _get(location, \"state.from.pathname\");\n  console.log(\"location => \", location);\n  const goToForgotPassword = (e) => {\n    e.preventDefault();\n  };\n\n  const goToRegister = (e) => {\n    e.preventDefault();\n  };\n\n  const signInSuccess = (userData) => {\n    signIn(authDispatch, userData);\n    if (fromUrl) {\n      history.push(fromUrl);\n    } else {\n      history.push(\"/\");\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        username: \"\",\n        password: \"\"\n      }}\n      validationSchema={LoginSchema}\n      onSubmit={async (values, { resetForm }) => {\n        try {\n          const userData = { ...values };\n          resetForm();\n          signInSuccess(userData);\n        } catch (err) {\n          console.error(err);\n        }\n      }}\n    >\n      {() => (\n        <Form>\n          <Field\n            name=\"username\"\n            type=\"text\"\n            placeholder=\"Mobile Number or Email Address\"\n            component={Input}\n          />\n          <Field\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Password\"\n            component={Input}\n          />\n\n          <p>\n            <a href=\"/#\" onClick={goToForgotPassword}>\n              Forgot Password?\n            </a>\n          </p>\n          <button className=\"auth-button block\" onClick={() => {}}>\n            Login\n          </button>\n\n          <p>\n            New here?{\" \"}\n            <a href=\"/#\" onClick={goToRegister}>\n              Sign Up Now!\n            </a>\n          </p>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default AuthPage;\n","import React, { useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport {\n  CheckoutStateContext,\n  CheckoutDispatchContext,\n  CHECKOUT_STEPS,\n  setCheckoutStep,\n  saveShippingAddress\n} from \"../contexts/checkout\";\nimport { CartStateContext } from \"../contexts/cart\";\nimport { AuthStateContext, AuthDispatchContext, signOut } from \"../contexts/auth\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport _get from \"lodash.get\";\nimport Input from \"../components/core/form-controls/Input\";\nimport { phoneRegExp } from \"../constants/common\";\n\nconst AddressSchema = Yup.object().shape({\n  fullName: Yup.string().required(\"Full Name is required\"),\n  phoneNumber: Yup.string()\n    .required(\"Phone Number is required\")\n    .matches(phoneRegExp, \"Phone Number is not a valid 10 digit number\")\n    .min(10, \"Phone Number is too short\")\n    .max(10, \"Phone Number is too long\"),\n  addressLine: Yup.string().required(\"Door No. & Street is required!\"),\n  city: Yup.string().required(\"City is required!\"),\n  state: Yup.string().required(\"State is required!\"),\n  code: Yup.string().required(\"ZIP/Postal code is required!\"),\n  country: Yup.string().required(\"Country is required!\")\n});\n\nconst LoginStep = () => {\n  const history = useHistory();\n  const { user, isLoggedIn } = useContext(AuthStateContext);\n  const authDispatch = useContext(AuthDispatchContext);\n  const checkoutDispatch = useContext(CheckoutDispatchContext);\n  const handleContinueShopping = () => {\n    history.push(\"/\");\n  };\n  const handleLoginAsDiffUser = () => {\n    signOut(authDispatch);\n    history.push(\"/auth\");\n  };\n  const handleGotoLogin = () => {\n    history.push(\"/auth\");\n  };\n  const handleProceed = () => {\n    setCheckoutStep(checkoutDispatch, CHECKOUT_STEPS.SHIPPING);\n  };\n  return (\n    <div className=\"detail-container\">\n      <h2>Sign In now!</h2>\n      <div className=\"auth-message\">\n        {isLoggedIn ? (\n          <>\n            <p>\n              Logged in as <span>{user.username}</span>\n            </p>\n            <button onClick={() => handleLoginAsDiffUser()}>\n              Login as Different User\n            </button>\n          </>\n        ) : (\n          <>\n            <p>Please login to continue.</p>\n            <button onClick={() => handleGotoLogin()}>Login</button>\n          </>\n        )}\n      </div>\n      <div className=\"actions\">\n        <button className=\"outline\" onClick={() => handleContinueShopping()}>\n          <i className=\"rsc-icon-arrow_back\" /> Continue Shopping\n        </button>\n        <button disabled={!isLoggedIn} onClick={() => handleProceed()}>\n          Proceed\n          <i className=\"rsc-icon-arrow_forward\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst AddressStep = () => {\n  const checkoutDispatch = useContext(CheckoutDispatchContext);\n\n  const handleBackToLogin = () => {\n    setCheckoutStep(checkoutDispatch, CHECKOUT_STEPS.AUTH);\n  };\n  const handleSaveAddress = (addressData) => {\n    saveShippingAddress(checkoutDispatch, addressData);\n  };\n  return (\n    <div className=\"detail-container\">\n      <h2>Shipping Address</h2>\n      <Formik\n        initialValues={{\n          fullName: \"John Doe\",\n          phoneNumber: \"5552229876\",\n          addressLine: \"L1, Palm Residency\",\n          city: \"Kingston\",\n          state: \"New York\",\n          code: \"12401\",\n          country: \"United States\"\n        }}\n        validationSchema={AddressSchema}\n        onSubmit={async (values, { resetForm }) => {\n          try {\n            const addressData = { ...values };\n            resetForm();\n            handleSaveAddress(addressData);\n          } catch (err) {\n            console.error(err);\n          }\n        }}\n      >\n        {() => (\n          <Form>\n            <div className=\"field-group\">\n              <Field\n                name=\"fullName\"\n                type=\"text\"\n                placeholder=\"Full Name\"\n                component={Input}\n              />\n              <Field\n                name=\"phoneNumber\"\n                type=\"text\"\n                placeholder=\"Phone Number\"\n                component={Input}\n              />\n            </div>\n            <Field\n              name=\"addressLine\"\n              type=\"text\"\n              placeholder=\"Door No. & Street\"\n              component={Input}\n            />\n            <div className=\"field-group\">\n              <Field\n                name=\"city\"\n                type=\"text\"\n                placeholder=\"City\"\n                component={Input}\n              />\n              <Field\n                name=\"state\"\n                type=\"text\"\n                placeholder=\"State\"\n                component={Input}\n              />\n            </div>\n            <div className=\"field-group\">\n              <Field\n                name=\"code\"\n                type=\"text\"\n                placeholder=\"ZIP/Postal Code\"\n                component={Input}\n              />\n              <Field\n                name=\"country\"\n                type=\"text\"\n                placeholder=\"Country\"\n                component={Input}\n              />\n            </div>\n            <div className=\"actions\">\n              <button\n                type=\"button\"\n                className=\"outline\"\n                onClick={() => handleBackToLogin()}\n              >\n                <i className=\"rsc-icon-arrow_back\" /> Login in as Different User\n              </button>\n              <button type=\"submit\">\n                Save Address\n                <i className=\"rsc-icon-arrow_forward\" />\n              </button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nconst PaymentStep = () => {\n  const { shippingAddress } = useContext(CheckoutStateContext);\n  const checkoutDispatch = useContext(CheckoutDispatchContext);\n  const handleBackToAddress = () => {\n    setCheckoutStep(checkoutDispatch, CHECKOUT_STEPS.SHIPPING);\n  };\n  const handlePayment = () => {};\n  return (\n    <div className=\"detail-container\">\n      <h2>Payment</h2>\n      {/* <div>\n        <pre>{JSON.stringify(shippingAddress, null, 0)}</pre>\n      </div> */}\n      <div className=\"actions\">\n        <button\n          type=\"button\"\n          className=\"outline\"\n          onClick={() => handleBackToAddress()}\n        >\n          <i className=\"rsc-icon-arrow_back\" /> Back to Shipping Details\n        </button>\n        <button disabled={!shippingAddress} onClick={() => handlePayment()}>\n          Save Address\n          <i className=\"rsc-icon-arrow_forward\" />\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst Checkout = () => {\n  const { items = [] } = useContext(CartStateContext);\n  const { isLoggedIn } = useContext(AuthStateContext);\n  const { step, shippingAddress } = useContext(CheckoutStateContext);\n  const checkoutDispatch = useContext(CheckoutDispatchContext);\n  const totalItems = items.length;\n\n  const handleClickTimeline = (nextStep) => {\n    setCheckoutStep(checkoutDispatch, nextStep);\n  };\n\n  return (\n    <div className=\"checkout-page\">\n      <div className=\"container\">\n        <div className=\"order-details\">\n          <ul className=\"timeline\">\n            <li\n              className={classNames({\n                done: isLoggedIn,\n                active: step === CHECKOUT_STEPS.AUTH\n              })}\n              onClick={() => handleClickTimeline(CHECKOUT_STEPS.AUTH)}\n            >\n              <h2>Sign In</h2>\n              <i className=\"rsc-icon-check_circle\" />\n            </li>\n            <li\n              className={classNames({\n                done: shippingAddress !== null,\n                active: step === CHECKOUT_STEPS.SHIPPING\n              })}\n              onClick={() => handleClickTimeline(CHECKOUT_STEPS.SHIPPING)}\n            >\n              <h2>Shipping</h2>\n              <i className=\"rsc-icon-check_circle\" />\n            </li>\n            <li\n              className={classNames({\n                done: false,\n                active: step === CHECKOUT_STEPS.PAYMENT\n              })}\n              onClick={() => handleClickTimeline(CHECKOUT_STEPS.PAYMENT)}\n            >\n              <h2>Payment</h2>\n              <i className=\"rsc-icon-check_circle\" />\n            </li>\n          </ul>\n          {step === CHECKOUT_STEPS.AUTH && <LoginStep />}\n          {step === CHECKOUT_STEPS.SHIPPING && <AddressStep />}\n          {step === CHECKOUT_STEPS.PAYMENT && <PaymentStep />}\n        </div>\n        <div className=\"order-summary\">\n          <h2>\n            Summary\n            <span>{` (${totalItems}) Items`}</span>\n          </h2>\n          <ul className=\"cart-items\">\n            {items.map((product) => {\n              return (\n                <li className=\"cart-item\" key={product.name}>\n                  <img className=\"product-image\" src={product.image} />\n                  <div className=\"product-info\">\n                    <p className=\"product-name\">{product.name}</p>\n                    <p className=\"product-price\">{product.price}</p>\n                  </div>\n                  <div className=\"product-total\">\n                    <p className=\"quantity\">\n                      {`${product.quantity} ${\n                        product.quantity > 1 ? \"Nos.\" : \"No.\"\n                      }`}\n                    </p>\n                    <p className=\"amount\">{product.quantity * product.price}</p>\n                  </div>\n                </li>\n              );\n            })}\n          </ul>\n\n          <ul className=\"total-breakup\">\n            <li>\n              <p>Subtotal</p>\n              <p>5000</p>\n            </li>\n            <li>\n              <p>Tax</p>\n              <p>5000</p>\n            </li>\n            <li>\n              <p>Shipping</p>\n              <p>5000</p>\n            </li>\n            <li>\n              <h2>Total</h2>\n              <h2>5000</h2>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Checkout;\n","export const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\n\n\n// Importing the Bootstrap CSS\n//import 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"underConstruction_img__242qs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerText\":\"ContactUs_headerText__2YRn4\",\"submitErr\":\"ContactUs_submitErr__1kRfy\",\"submitOK\":\"ContactUs_submitOK__2KVvV\"};"],"sourceRoot":""}